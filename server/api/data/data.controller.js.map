{"version":3,"sources":["../../../../server/api/data/data.controller.js"],"names":[],"mappings":";;;;;;;;;AASA,YAAY,CAAC;;;;AAEb,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACnC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEnC,SAAS,WAAW,CAAC,GAAG,EAAE,UAAU,EAAE;AACpC,YAAU,GAAG,UAAU,IAAI,GAAG,CAAC;AAC/B,SAAO,UAAU,GAAG,EAAE;AACpB,OAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAClC,CAAC;CACH;;AAED,SAAS,kBAAkB,CAAC,GAAG,EAAE,UAAU,EAAE;AAC3C,YAAU,GAAG,UAAU,IAAI,GAAG,CAAC;AAC/B,SAAO,UAAU,MAAM,EAAE;AACvB,QAAI,MAAM,EAAE;AACV,SAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC;GACF,CAAC;CACH;;AAED,SAAS,oBAAoB,CAAC,GAAG,EAAE;AACjC,SAAO,UAAU,MAAM,EAAE;AACvB,QAAI,CAAC,MAAM,EAAE;AACX,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACtB,aAAO,IAAI,CAAC;KACb;AACD,WAAO,MAAM,CAAC;GACf,CAAC;CACH;;AAED,SAAS,WAAW,CAAC,OAAO,EAAE;AAC5B,SAAO,UAAU,MAAM,EAAE;AACvB,QAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvC,WAAO,OAAO,CAAC,SAAS,EAAE,CACvB,MAAM,CAAC,UAAU,OAAO,EAAE;AACzB,aAAO,OAAO,CAAC;KAChB,CAAC,CAAC;GACN,CAAC;CACH;;AAED,SAAS,YAAY,CAAC,GAAG,EAAE;AACzB,SAAO,UAAU,MAAM,EAAE;AACvB,QAAI,MAAM,EAAE;AACV,aAAO,MAAM,CAAC,WAAW,EAAE,CACxB,IAAI,CAAC,YAAY;AAChB,WAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;OACvB,CAAC,CAAC;KACN;GACF,CAAC;CACH;;AAED,SAAS,oBAAoB,GAAG;AAC9B,SAAO,aAAY,UAAS,OAAO,EAAC,MAAM,EAAE;AAC1C,QAAI,QAAQ,CAAC,UAAU,CAAC,UAAU,KAAK,CAAC,EAAE;AACxC,aAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;KACjC,MAAM;AACL,cAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,YAAU;AACzC,eAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;OACjC,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;CACJ;;AAGD,SAAS,kBAAkB,CAAC,IAAI,EAAC,GAAG,EAAE;AACpC,SAAO,UAAS,EAAE,EAAE;AAClB,MAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,EAAC,UAAS,GAAG,EAAC,MAAM,EAAC;AACxD,UAAG,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC,CAAC;GACN,CAAA;CACF;;;AAGD,OAAO,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AAClC,MAAI,CAAC,SAAS,EAAE,CACb,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,SACxB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B,CAAC;;;AAGF,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACjC,MAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;;AAE3B,sBAAoB,EAAE,CAAC,IAAI,CAAC,UAAS,EAAE,EAAE;AACvC,MAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC,IAAI,EAAE;AACtD,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC;;;AAGF,OAAO,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACnC,MAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;;;AAGpB,MAAI,IAAI,CAAC,IAAI,EAAE;AACb,wBAAoB,EAAE,CACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC,CAAC;GACrC,MAAM;AACL,eAAW,CAAC,wBAAwB,CAAC,CAAC;GACvC;CACF,CAAC;;;AAGF,OAAO,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACnC,MAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;AAChB,WAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;GACrB;AACD,MAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAC9B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAC3B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,SACxB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B,CAAC;;;AAGF,OAAO,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACpC,MAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAC9B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAClB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B,CAAC","file":"data.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/data/              ->  index\n * POST    /api/data/              ->  create\n * GET     /api/data//:id          ->  show\n * PUT     /api/data//:id          ->  update\n * DELETE  /api/data//:id          ->  destroy\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar Data = require('./data.model');\nvar mongoose = require('mongoose');\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction responseWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function (entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(function (updated) {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(function () {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction openNativeConnection() {\n  return new Promise(function(resolve,reject)Â {\n    if (mongoose.connection.readyState === 1) {\n      resolve(mongoose.connection.db);\n    } else {\n      mongoose.connection.once('open', function(){\n        resolve(mongoose.connection.db);\n      });\n    }\n  });\n}\n\n\nfunction createNativeEntity(data,res) {\n  return function(db) {\n    db.collection(data.type).insertOne(data,function(err,entity){\n        if(err) res.status(500).send(err);\n        res.status(201).json(data);\n      });\n  }\n}\n\n// Gets a list of Datas\nexports.index = function (req, res) {\n  Data.findAsync()\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n};\n\n// Gets a single Data from the DB\nexports.show = function (req, res) {\n  var type = req.params.type;\n\n  openNativeConnection().then(function(db) {\n    db.collection(type).find({}).toArray(function(err,docs) {\n      res.status(200).json(docs);\n    });\n  });\n};\n\n// Creates a new Data in the DB\nexports.create = function (req, res) {\n  var data = req.body;\n\n  // Change this to promises\n  if (data.type) {\n    openNativeConnection()\n    .then(createNativeEntity(data,res));\n  } else {\n    handleError('no data type specified');\n  }\n};\n\n// Updates an existing Data in the DB\nexports.update = function (req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Data.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n};\n\n// Deletes a Data from the DB\nexports.destroy = function (req, res) {\n  Data.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n};\n"]}